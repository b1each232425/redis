// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.19.4
// source: comm.proto

package qproto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type MessageType int32

const (
	MessageType_UNKNOWN MessageType = 0
	// Cln --> Srv|Cln
	MessageType_ACTION_STATUS    MessageType = 2
	MessageType_USER_LOGIN       MessageType = 4
	MessageType_USER_LOGOUT      MessageType = 6
	MessageType_REGISTER_USER    MessageType = 8
	MessageType_REVOKE_USER      MessageType = 10
	MessageType_QUERY_USERLIST   MessageType = 12
	MessageType_QUERY_USER       MessageType = 14
	MessageType_QUERY_USER_ALIVE MessageType = 16
	MessageType_SYNC             MessageType = 18
	MessageType_HEARTBEAT        MessageType = 20
	MessageType_CHAT_MSG         MessageType = 22
	MessageType_FILE_MSG         MessageType = 24
	MessageType_AUDIO_MSG        MessageType = 26
	MessageType_VIDEO_MSG        MessageType = 28
	//cln->cln
	MessageType_PUNCH_REQ MessageType = 30
	//cln->serv
	MessageType_PUNCH_REQ_BROKER MessageType = 34
	//serv->cln
	MessageType_PUNCH_REQ_PEER MessageType = 36
	//cln->cln
	MessageType_PUNCH_RESP MessageType = 38
	//cln->cln
	MessageType_PIERCED    MessageType = 40
	MessageType_PUNCH_PING MessageType = 42
	MessageType_PUNCH_PONG MessageType = 44
	//status not used in communication frame type
	MessageType_PUNCH_INIT     MessageType = 50
	MessageType_PUNCHING       MessageType = 52
	MessageType_PUNCH_FAILED   MessageType = 54
	MessageType_PUNCH_SUCCESS  MessageType = 56
	MessageType_QUERY_RESOURCE MessageType = 60
	MessageType_LOAD_RESOURCE  MessageType = 62
	MessageType_EXECUTE        MessageType = 64
	// SrvMgr
	MessageType_SRV_MGR MessageType = 66
	// Srv --> Cln
	MessageType_SRV_SHUTDOWN MessageType = 68
	MessageType_SRV_STARTING MessageType = 70
	MessageType_SRV_MESSAGE  MessageType = 72
	// Inter-Server
	MessageType_LB_SRV_ONLINE       MessageType = 80
	MessageType_LB_SRV_OFFLINE      MessageType = 82
	MessageType_LB_QRY_IDLE_SRV     MessageType = 84
	MessageType_LB_USER_LOGIN       MessageType = 86
	MessageType_LB_USER_LOGOUT      MessageType = 88
	MessageType_LB_QRY_ONLINE_USERS MessageType = 90
	MessageType_LB_PUSH_MSG         MessageType = 92
	MessageType_LB_PAYLOAD_FULL     MessageType = 94
)

// Enum value maps for MessageType.
var (
	MessageType_name = map[int32]string{
		0:  "UNKNOWN",
		2:  "ACTION_STATUS",
		4:  "USER_LOGIN",
		6:  "USER_LOGOUT",
		8:  "REGISTER_USER",
		10: "REVOKE_USER",
		12: "QUERY_USERLIST",
		14: "QUERY_USER",
		16: "QUERY_USER_ALIVE",
		18: "SYNC",
		20: "HEARTBEAT",
		22: "CHAT_MSG",
		24: "FILE_MSG",
		26: "AUDIO_MSG",
		28: "VIDEO_MSG",
		30: "PUNCH_REQ",
		34: "PUNCH_REQ_BROKER",
		36: "PUNCH_REQ_PEER",
		38: "PUNCH_RESP",
		40: "PIERCED",
		42: "PUNCH_PING",
		44: "PUNCH_PONG",
		50: "PUNCH_INIT",
		52: "PUNCHING",
		54: "PUNCH_FAILED",
		56: "PUNCH_SUCCESS",
		60: "QUERY_RESOURCE",
		62: "LOAD_RESOURCE",
		64: "EXECUTE",
		66: "SRV_MGR",
		68: "SRV_SHUTDOWN",
		70: "SRV_STARTING",
		72: "SRV_MESSAGE",
		80: "LB_SRV_ONLINE",
		82: "LB_SRV_OFFLINE",
		84: "LB_QRY_IDLE_SRV",
		86: "LB_USER_LOGIN",
		88: "LB_USER_LOGOUT",
		90: "LB_QRY_ONLINE_USERS",
		92: "LB_PUSH_MSG",
		94: "LB_PAYLOAD_FULL",
	}
	MessageType_value = map[string]int32{
		"UNKNOWN":             0,
		"ACTION_STATUS":       2,
		"USER_LOGIN":          4,
		"USER_LOGOUT":         6,
		"REGISTER_USER":       8,
		"REVOKE_USER":         10,
		"QUERY_USERLIST":      12,
		"QUERY_USER":          14,
		"QUERY_USER_ALIVE":    16,
		"SYNC":                18,
		"HEARTBEAT":           20,
		"CHAT_MSG":            22,
		"FILE_MSG":            24,
		"AUDIO_MSG":           26,
		"VIDEO_MSG":           28,
		"PUNCH_REQ":           30,
		"PUNCH_REQ_BROKER":    34,
		"PUNCH_REQ_PEER":      36,
		"PUNCH_RESP":          38,
		"PIERCED":             40,
		"PUNCH_PING":          42,
		"PUNCH_PONG":          44,
		"PUNCH_INIT":          50,
		"PUNCHING":            52,
		"PUNCH_FAILED":        54,
		"PUNCH_SUCCESS":       56,
		"QUERY_RESOURCE":      60,
		"LOAD_RESOURCE":       62,
		"EXECUTE":             64,
		"SRV_MGR":             66,
		"SRV_SHUTDOWN":        68,
		"SRV_STARTING":        70,
		"SRV_MESSAGE":         72,
		"LB_SRV_ONLINE":       80,
		"LB_SRV_OFFLINE":      82,
		"LB_QRY_IDLE_SRV":     84,
		"LB_USER_LOGIN":       86,
		"LB_USER_LOGOUT":      88,
		"LB_QRY_ONLINE_USERS": 90,
		"LB_PUSH_MSG":         92,
		"LB_PAYLOAD_FULL":     94,
	}
)

func (x MessageType) Enum() *MessageType {
	p := new(MessageType)
	*p = x
	return p
}

func (x MessageType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MessageType) Descriptor() protoreflect.EnumDescriptor {
	return file_comm_proto_enumTypes[0].Descriptor()
}

func (MessageType) Type() protoreflect.EnumType {
	return &file_comm_proto_enumTypes[0]
}

func (x MessageType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *MessageType) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = MessageType(num)
	return nil
}

// Deprecated: Use MessageType.Descriptor instead.
func (MessageType) EnumDescriptor() ([]byte, []int) {
	return file_comm_proto_rawDescGZIP(), []int{0}
}

type Coordinate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	X *int64 `protobuf:"zigzag64,1,req,name=x" json:"x,omitempty"`
	Y *int64 `protobuf:"zigzag64,2,req,name=y" json:"y,omitempty"`
	Z *int64 `protobuf:"zigzag64,3,opt,name=z,def=0" json:"z,omitempty"`
}

// Default values for Coordinate fields.
const (
	Default_Coordinate_Z = int64(0)
)

func (x *Coordinate) Reset() {
	*x = Coordinate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_comm_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Coordinate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Coordinate) ProtoMessage() {}

func (x *Coordinate) ProtoReflect() protoreflect.Message {
	mi := &file_comm_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Coordinate.ProtoReflect.Descriptor instead.
func (*Coordinate) Descriptor() ([]byte, []int) {
	return file_comm_proto_rawDescGZIP(), []int{0}
}

func (x *Coordinate) GetX() int64 {
	if x != nil && x.X != nil {
		return *x.X
	}
	return 0
}

func (x *Coordinate) GetY() int64 {
	if x != nil && x.Y != nil {
		return *x.Y
	}
	return 0
}

func (x *Coordinate) GetZ() int64 {
	if x != nil && x.Z != nil {
		return *x.Z
	}
	return Default_Coordinate_Z
}

type Attr struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    *uint32 `protobuf:"varint,1,req,name=id" json:"id,omitempty"`
	Value *string `protobuf:"bytes,2,req,name=value" json:"value,omitempty"`
}

func (x *Attr) Reset() {
	*x = Attr{}
	if protoimpl.UnsafeEnabled {
		mi := &file_comm_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Attr) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Attr) ProtoMessage() {}

func (x *Attr) ProtoReflect() protoreflect.Message {
	mi := &file_comm_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Attr.ProtoReflect.Descriptor instead.
func (*Attr) Descriptor() ([]byte, []int) {
	return file_comm_proto_rawDescGZIP(), []int{1}
}

func (x *Attr) GetId() uint32 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

func (x *Attr) GetValue() string {
	if x != nil && x.Value != nil {
		return *x.Value
	}
	return ""
}

type Object struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   *int32  `protobuf:"zigzag32,1,req,name=id" json:"id,omitempty"`
	Type *uint32 `protobuf:"varint,2,opt,name=type" json:"type,omitempty"`
	Attr []*Attr `protobuf:"bytes,3,rep,name=attr" json:"attr,omitempty"`
}

func (x *Object) Reset() {
	*x = Object{}
	if protoimpl.UnsafeEnabled {
		mi := &file_comm_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Object) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Object) ProtoMessage() {}

func (x *Object) ProtoReflect() protoreflect.Message {
	mi := &file_comm_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Object.ProtoReflect.Descriptor instead.
func (*Object) Descriptor() ([]byte, []int) {
	return file_comm_proto_rawDescGZIP(), []int{2}
}

func (x *Object) GetId() int32 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

func (x *Object) GetType() uint32 {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return 0
}

func (x *Object) GetAttr() []*Attr {
	if x != nil {
		return x.Attr
	}
	return nil
}

type Action struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Object        *Object     `protobuf:"bytes,1,req,name=object" json:"object,omitempty"`
	Coord         *Coordinate `protobuf:"bytes,2,req,name=coord" json:"coord,omitempty"`
	Type          *int32      `protobuf:"zigzag32,3,req,name=type" json:"type,omitempty"`
	Toward        *int32      `protobuf:"zigzag32,4,opt,name=toward" json:"toward,omitempty"`
	Heartbeat     *uint32     `protobuf:"varint,5,opt,name=heartbeat" json:"heartbeat,omitempty"`
	OriginalTimer *uint64     `protobuf:"varint,6,opt,name=originalTimer" json:"originalTimer,omitempty"`
}

func (x *Action) Reset() {
	*x = Action{}
	if protoimpl.UnsafeEnabled {
		mi := &file_comm_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Action) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Action) ProtoMessage() {}

func (x *Action) ProtoReflect() protoreflect.Message {
	mi := &file_comm_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Action.ProtoReflect.Descriptor instead.
func (*Action) Descriptor() ([]byte, []int) {
	return file_comm_proto_rawDescGZIP(), []int{3}
}

func (x *Action) GetObject() *Object {
	if x != nil {
		return x.Object
	}
	return nil
}

func (x *Action) GetCoord() *Coordinate {
	if x != nil {
		return x.Coord
	}
	return nil
}

func (x *Action) GetType() int32 {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return 0
}

func (x *Action) GetToward() int32 {
	if x != nil && x.Toward != nil {
		return *x.Toward
	}
	return 0
}

func (x *Action) GetHeartbeat() uint32 {
	if x != nil && x.Heartbeat != nil {
		return *x.Heartbeat
	}
	return 0
}

func (x *Action) GetOriginalTimer() uint64 {
	if x != nil && x.OriginalTimer != nil {
		return *x.OriginalTimer
	}
	return 0
}

type SapV4 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// IPv4 sap
	SockaddrIn []byte `protobuf:"bytes,1,req,name=sockaddr_in,json=sockaddrIn" json:"sockaddr_in,omitempty"`
}

func (x *SapV4) Reset() {
	*x = SapV4{}
	if protoimpl.UnsafeEnabled {
		mi := &file_comm_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SapV4) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SapV4) ProtoMessage() {}

func (x *SapV4) ProtoReflect() protoreflect.Message {
	mi := &file_comm_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SapV4.ProtoReflect.Descriptor instead.
func (*SapV4) Descriptor() ([]byte, []int) {
	return file_comm_proto_rawDescGZIP(), []int{4}
}

func (x *SapV4) GetSockaddrIn() []byte {
	if x != nil {
		return x.SockaddrIn
	}
	return nil
}

type SapV6 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// IPv6 sap
	SockaddrIn6 []byte `protobuf:"bytes,1,req,name=sockaddr_in6,json=sockaddrIn6" json:"sockaddr_in6,omitempty"`
}

func (x *SapV6) Reset() {
	*x = SapV6{}
	if protoimpl.UnsafeEnabled {
		mi := &file_comm_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SapV6) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SapV6) ProtoMessage() {}

func (x *SapV6) ProtoReflect() protoreflect.Message {
	mi := &file_comm_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SapV6.ProtoReflect.Descriptor instead.
func (*SapV6) Descriptor() ([]byte, []int) {
	return file_comm_proto_rawDescGZIP(), []int{5}
}

func (x *SapV6) GetSockaddrIn6() []byte {
	if x != nil {
		return x.SockaddrIn6
	}
	return nil
}

type Sap struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GlobalAddrIpv4 []*SapV4 `protobuf:"bytes,1,rep,name=globalAddr_ipv4,json=globalAddrIpv4" json:"globalAddr_ipv4,omitempty"`
	LocalAddrIpv4  []*SapV4 `protobuf:"bytes,2,rep,name=localAddr_ipv4,json=localAddrIpv4" json:"localAddr_ipv4,omitempty"`
	GlobalAddrIpv6 []*SapV6 `protobuf:"bytes,3,rep,name=globalAddr_ipv6,json=globalAddrIpv6" json:"globalAddr_ipv6,omitempty"`
	LocalAddrIpv6  []*SapV6 `protobuf:"bytes,4,rep,name=localAddr_ipv6,json=localAddrIpv6" json:"localAddr_ipv6,omitempty"`
}

func (x *Sap) Reset() {
	*x = Sap{}
	if protoimpl.UnsafeEnabled {
		mi := &file_comm_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Sap) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Sap) ProtoMessage() {}

func (x *Sap) ProtoReflect() protoreflect.Message {
	mi := &file_comm_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Sap.ProtoReflect.Descriptor instead.
func (*Sap) Descriptor() ([]byte, []int) {
	return file_comm_proto_rawDescGZIP(), []int{6}
}

func (x *Sap) GetGlobalAddrIpv4() []*SapV4 {
	if x != nil {
		return x.GlobalAddrIpv4
	}
	return nil
}

func (x *Sap) GetLocalAddrIpv4() []*SapV4 {
	if x != nil {
		return x.LocalAddrIpv4
	}
	return nil
}

func (x *Sap) GetGlobalAddrIpv6() []*SapV6 {
	if x != nil {
		return x.GlobalAddrIpv6
	}
	return nil
}

func (x *Sap) GetLocalAddrIpv6() []*SapV6 {
	if x != nil {
		return x.LocalAddrIpv6
	}
	return nil
}

//通信结果，包括通信状态，返回的数据
type Status struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//请求的消息类型
	Type *MessageType `protobuf:"varint,2,req,name=type,enum=qproto.MessageType" json:"type,omitempty"`
	//执行状态描述
	Msg *string `protobuf:"bytes,4,req,name=msg" json:"msg,omitempty"`
	//执行状态编号
	Code *int32 `protobuf:"zigzag32,6,opt,name=code" json:"code,omitempty"`
	//统一时钟, 以纳秒为单位
	TickCntInBytes []byte `protobuf:"bytes,8,opt,name=tickCntInBytes" json:"tickCntInBytes,omitempty"`
	//附加数据
	Data []byte `protobuf:"bytes,12,opt,name=data" json:"data,omitempty"`
	//附加数据的条数/数量，如果可以计量
	DataCount *uint32 `protobuf:"varint,13,opt,name=dataCount" json:"dataCount,omitempty"`
}

func (x *Status) Reset() {
	*x = Status{}
	if protoimpl.UnsafeEnabled {
		mi := &file_comm_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Status) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Status) ProtoMessage() {}

func (x *Status) ProtoReflect() protoreflect.Message {
	mi := &file_comm_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Status.ProtoReflect.Descriptor instead.
func (*Status) Descriptor() ([]byte, []int) {
	return file_comm_proto_rawDescGZIP(), []int{7}
}

func (x *Status) GetType() MessageType {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return MessageType_UNKNOWN
}

func (x *Status) GetMsg() string {
	if x != nil && x.Msg != nil {
		return *x.Msg
	}
	return ""
}

func (x *Status) GetCode() int32 {
	if x != nil && x.Code != nil {
		return *x.Code
	}
	return 0
}

func (x *Status) GetTickCntInBytes() []byte {
	if x != nil {
		return x.TickCntInBytes
	}
	return nil
}

func (x *Status) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *Status) GetDataCount() uint32 {
	if x != nil && x.DataCount != nil {
		return *x.DataCount
	}
	return 0
}

//end point
type Ep struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// IP or Domain name
	Addr *string `protobuf:"bytes,1,req,name=addr" json:"addr,omitempty"`
	Port *uint32 `protobuf:"varint,2,req,name=port" json:"port,omitempty"`
}

func (x *Ep) Reset() {
	*x = Ep{}
	if protoimpl.UnsafeEnabled {
		mi := &file_comm_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Ep) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Ep) ProtoMessage() {}

func (x *Ep) ProtoReflect() protoreflect.Message {
	mi := &file_comm_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Ep.ProtoReflect.Descriptor instead.
func (*Ep) Descriptor() ([]byte, []int) {
	return file_comm_proto_rawDescGZIP(), []int{8}
}

func (x *Ep) GetAddr() string {
	if x != nil && x.Addr != nil {
		return *x.Addr
	}
	return ""
}

func (x *Ep) GetPort() uint32 {
	if x != nil && x.Port != nil {
		return *x.Port
	}
	return 0
}

//epList multiple ep collection
type EpList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ep []*Ep `protobuf:"bytes,1,rep,name=ep" json:"ep,omitempty"`
}

func (x *EpList) Reset() {
	*x = EpList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_comm_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EpList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EpList) ProtoMessage() {}

func (x *EpList) ProtoReflect() protoreflect.Message {
	mi := &file_comm_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EpList.ProtoReflect.Descriptor instead.
func (*EpList) Descriptor() ([]byte, []int) {
	return file_comm_proto_rawDescGZIP(), []int{9}
}

func (x *EpList) GetEp() []*Ep {
	if x != nil {
		return x.Ep
	}
	return nil
}

type UserEP struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name  *string `protobuf:"bytes,1,req,name=name" json:"name,omitempty"`
	Id    *uint32 `protobuf:"varint,2,opt,name=id" json:"id,omitempty"`
	Pwd   *string `protobuf:"bytes,3,opt,name=pwd" json:"pwd,omitempty"`
	Token *string `protobuf:"bytes,4,opt,name=token" json:"token,omitempty"`
	Ep    *Ep     `protobuf:"bytes,5,opt,name=ep" json:"ep,omitempty"`
}

func (x *UserEP) Reset() {
	*x = UserEP{}
	if protoimpl.UnsafeEnabled {
		mi := &file_comm_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserEP) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserEP) ProtoMessage() {}

func (x *UserEP) ProtoReflect() protoreflect.Message {
	mi := &file_comm_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserEP.ProtoReflect.Descriptor instead.
func (*UserEP) Descriptor() ([]byte, []int) {
	return file_comm_proto_rawDescGZIP(), []int{10}
}

func (x *UserEP) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *UserEP) GetId() uint32 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

func (x *UserEP) GetPwd() string {
	if x != nil && x.Pwd != nil {
		return *x.Pwd
	}
	return ""
}

func (x *UserEP) GetToken() string {
	if x != nil && x.Token != nil {
		return *x.Token
	}
	return ""
}

func (x *UserEP) GetEp() *Ep {
	if x != nil {
		return x.Ep
	}
	return nil
}

type ServEP struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MaxPayLoad     *uint32 `protobuf:"varint,1,req,name=maxPayLoad" json:"maxPayLoad,omitempty"`
	CurrentPayLoad *uint32 `protobuf:"varint,2,req,name=currentPayLoad" json:"currentPayLoad,omitempty"`
	Ep             *Ep     `protobuf:"bytes,3,req,name=ep" json:"ep,omitempty"`
	// Name for identify this end point
	// It's generated by server with addr:port
	SrvName   *string `protobuf:"bytes,4,req,name=srvName" json:"srvName,omitempty"`
	BIsOnLine *bool   `protobuf:"varint,6,req,name=bIsOnLine" json:"bIsOnLine,omitempty"`
}

func (x *ServEP) Reset() {
	*x = ServEP{}
	if protoimpl.UnsafeEnabled {
		mi := &file_comm_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServEP) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServEP) ProtoMessage() {}

func (x *ServEP) ProtoReflect() protoreflect.Message {
	mi := &file_comm_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServEP.ProtoReflect.Descriptor instead.
func (*ServEP) Descriptor() ([]byte, []int) {
	return file_comm_proto_rawDescGZIP(), []int{11}
}

func (x *ServEP) GetMaxPayLoad() uint32 {
	if x != nil && x.MaxPayLoad != nil {
		return *x.MaxPayLoad
	}
	return 0
}

func (x *ServEP) GetCurrentPayLoad() uint32 {
	if x != nil && x.CurrentPayLoad != nil {
		return *x.CurrentPayLoad
	}
	return 0
}

func (x *ServEP) GetEp() *Ep {
	if x != nil {
		return x.Ep
	}
	return nil
}

func (x *ServEP) GetSrvName() string {
	if x != nil && x.SrvName != nil {
		return *x.SrvName
	}
	return ""
}

func (x *ServEP) GetBIsOnLine() bool {
	if x != nil && x.BIsOnLine != nil {
		return *x.BIsOnLine
	}
	return false
}

//接受消息的对象集合，以组、角色、用户编号为标识
type Target struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GrpID  []uint32 `protobuf:"varint,1,rep,name=grpID" json:"grpID,omitempty"`
	RoleID []uint32 `protobuf:"varint,2,rep,name=roleID" json:"roleID,omitempty"`
	UserID []uint32 `protobuf:"varint,3,rep,name=userID" json:"userID,omitempty"`
}

func (x *Target) Reset() {
	*x = Target{}
	if protoimpl.UnsafeEnabled {
		mi := &file_comm_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Target) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Target) ProtoMessage() {}

func (x *Target) ProtoReflect() protoreflect.Message {
	mi := &file_comm_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Target.ProtoReflect.Descriptor instead.
func (*Target) Descriptor() ([]byte, []int) {
	return file_comm_proto_rawDescGZIP(), []int{12}
}

func (x *Target) GetGrpID() []uint32 {
	if x != nil {
		return x.GrpID
	}
	return nil
}

func (x *Target) GetRoleID() []uint32 {
	if x != nil {
		return x.RoleID
	}
	return nil
}

func (x *Target) GetUserID() []uint32 {
	if x != nil {
		return x.UserID
	}
	return nil
}

type CmnMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       *string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Title    *string `protobuf:"bytes,2,opt,name=title" json:"title,omitempty"`
	Keywords *string `protobuf:"bytes,3,opt,name=keywords" json:"keywords,omitempty"`
	Category *string `protobuf:"bytes,4,opt,name=category" json:"category,omitempty"`
	Content  *string `protobuf:"bytes,5,opt,name=content" json:"content,omitempty"`
	Target   *Target `protobuf:"bytes,6,opt,name=target" json:"target,omitempty"`
	// Time in milliSeconds from 2012-01-01 00:00:00 000
	// one year is       7,57-B1 2C-00
	// 100 Years is    02-DE,41-35,30-00
	// uint64 is  ,FF-FF,FF-FF,FF-FF,FF-FF
	PublishTime *uint64 `protobuf:"varint,7,opt,name=publishTime" json:"publishTime,omitempty"`
}

func (x *CmnMsg) Reset() {
	*x = CmnMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_comm_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CmnMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CmnMsg) ProtoMessage() {}

func (x *CmnMsg) ProtoReflect() protoreflect.Message {
	mi := &file_comm_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CmnMsg.ProtoReflect.Descriptor instead.
func (*CmnMsg) Descriptor() ([]byte, []int) {
	return file_comm_proto_rawDescGZIP(), []int{13}
}

func (x *CmnMsg) GetId() string {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return ""
}

func (x *CmnMsg) GetTitle() string {
	if x != nil && x.Title != nil {
		return *x.Title
	}
	return ""
}

func (x *CmnMsg) GetKeywords() string {
	if x != nil && x.Keywords != nil {
		return *x.Keywords
	}
	return ""
}

func (x *CmnMsg) GetCategory() string {
	if x != nil && x.Category != nil {
		return *x.Category
	}
	return ""
}

func (x *CmnMsg) GetContent() string {
	if x != nil && x.Content != nil {
		return *x.Content
	}
	return ""
}

func (x *CmnMsg) GetTarget() *Target {
	if x != nil {
		return x.Target
	}
	return nil
}

func (x *CmnMsg) GetPublishTime() uint64 {
	if x != nil && x.PublishTime != nil {
		return *x.PublishTime
	}
	return 0
}

type Org struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Grp  []uint32 `protobuf:"varint,1,rep,name=grp" json:"grp,omitempty"`
	Role []uint32 `protobuf:"varint,2,rep,name=role" json:"role,omitempty"`
}

func (x *Org) Reset() {
	*x = Org{}
	if protoimpl.UnsafeEnabled {
		mi := &file_comm_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Org) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Org) ProtoMessage() {}

func (x *Org) ProtoReflect() protoreflect.Message {
	mi := &file_comm_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Org.ProtoReflect.Descriptor instead.
func (*Org) Descriptor() ([]byte, []int) {
	return file_comm_proto_rawDescGZIP(), []int{14}
}

func (x *Org) GetGrp() []uint32 {
	if x != nil {
		return x.Grp
	}
	return nil
}

func (x *Org) GetRole() []uint32 {
	if x != nil {
		return x.Role
	}
	return nil
}

//目标用户集合
type Targets struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	User []*User `protobuf:"bytes,1,rep,name=user" json:"user,omitempty"`
}

func (x *Targets) Reset() {
	*x = Targets{}
	if protoimpl.UnsafeEnabled {
		mi := &file_comm_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Targets) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Targets) ProtoMessage() {}

func (x *Targets) ProtoReflect() protoreflect.Message {
	mi := &file_comm_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Targets.ProtoReflect.Descriptor instead.
func (*Targets) Descriptor() ([]byte, []int) {
	return file_comm_proto_rawDescGZIP(), []int{15}
}

func (x *Targets) GetUser() []*User {
	if x != nil {
		return x.User
	}
	return nil
}

type User struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name *string `protobuf:"bytes,1,req,name=name" json:"name,omitempty"`
	Pwd  *string `protobuf:"bytes,2,opt,name=pwd" json:"pwd,omitempty"`
	Id   *uint32 `protobuf:"varint,3,opt,name=id" json:"id,omitempty"`
	//用户登录的设备标识
	DevId    *string `protobuf:"bytes,4,opt,name=devId" json:"devId,omitempty"`
	Nickname *string `protobuf:"bytes,5,opt,name=nickname" json:"nickname,omitempty"`
	//用户所属的组
	Group *uint32 `protobuf:"varint,7,opt,name=group" json:"group,omitempty"`
	//用户所属的角色
	Role         *uint32 `protobuf:"varint,8,opt,name=role" json:"role,omitempty"`
	RegistryTime *string `protobuf:"bytes,9,opt,name=registryTime" json:"registryTime,omitempty"`
	ActiveTime   *int64  `protobuf:"varint,10,opt,name=activeTime" json:"activeTime,omitempty"`
	LastLoginSAP *string `protobuf:"bytes,11,opt,name=lastLoginSAP" json:"lastLoginSAP,omitempty"`
	Email        *string `protobuf:"bytes,12,opt,name=email" json:"email,omitempty"`
	Gender       *string `protobuf:"bytes,13,opt,name=gender" json:"gender,omitempty"`
	//即时通信账号，如QQ,微信等
	ImCode *string `protobuf:"bytes,14,opt,name=imCode" json:"imCode,omitempty"`
	//电话
	Tele       *string `protobuf:"bytes,15,opt,name=tele" json:"tele,omitempty"`
	HomeAddr   *string `protobuf:"bytes,16,opt,name=homeAddr" json:"homeAddr,omitempty"`
	OfficeAddr *string `protobuf:"bytes,17,opt,name=officeAddr" json:"officeAddr,omitempty"`
	Remark     *string `protobuf:"bytes,31,opt,name=remark" json:"remark,omitempty"`
	Status     *string `protobuf:"bytes,32,opt,name=status" json:"status,omitempty"`
	//用户设备本地侦听所有的IP地址:端口
	Ep []*Ep `protobuf:"bytes,33,rep,name=ep" json:"ep,omitempty"`
	//用户公网IP地址:端口
	GlobalEP *Ep `protobuf:"bytes,34,opt,name=globalEP" json:"globalEP,omitempty"`
	//机构
	Org *Org `protobuf:"bytes,40,opt,name=org" json:"org,omitempty"`
	//证书
	Token *string `protobuf:"bytes,42,opt,name=token" json:"token,omitempty"`
}

func (x *User) Reset() {
	*x = User{}
	if protoimpl.UnsafeEnabled {
		mi := &file_comm_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *User) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*User) ProtoMessage() {}

func (x *User) ProtoReflect() protoreflect.Message {
	mi := &file_comm_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use User.ProtoReflect.Descriptor instead.
func (*User) Descriptor() ([]byte, []int) {
	return file_comm_proto_rawDescGZIP(), []int{16}
}

func (x *User) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *User) GetPwd() string {
	if x != nil && x.Pwd != nil {
		return *x.Pwd
	}
	return ""
}

func (x *User) GetId() uint32 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

func (x *User) GetDevId() string {
	if x != nil && x.DevId != nil {
		return *x.DevId
	}
	return ""
}

func (x *User) GetNickname() string {
	if x != nil && x.Nickname != nil {
		return *x.Nickname
	}
	return ""
}

func (x *User) GetGroup() uint32 {
	if x != nil && x.Group != nil {
		return *x.Group
	}
	return 0
}

func (x *User) GetRole() uint32 {
	if x != nil && x.Role != nil {
		return *x.Role
	}
	return 0
}

func (x *User) GetRegistryTime() string {
	if x != nil && x.RegistryTime != nil {
		return *x.RegistryTime
	}
	return ""
}

func (x *User) GetActiveTime() int64 {
	if x != nil && x.ActiveTime != nil {
		return *x.ActiveTime
	}
	return 0
}

func (x *User) GetLastLoginSAP() string {
	if x != nil && x.LastLoginSAP != nil {
		return *x.LastLoginSAP
	}
	return ""
}

func (x *User) GetEmail() string {
	if x != nil && x.Email != nil {
		return *x.Email
	}
	return ""
}

func (x *User) GetGender() string {
	if x != nil && x.Gender != nil {
		return *x.Gender
	}
	return ""
}

func (x *User) GetImCode() string {
	if x != nil && x.ImCode != nil {
		return *x.ImCode
	}
	return ""
}

func (x *User) GetTele() string {
	if x != nil && x.Tele != nil {
		return *x.Tele
	}
	return ""
}

func (x *User) GetHomeAddr() string {
	if x != nil && x.HomeAddr != nil {
		return *x.HomeAddr
	}
	return ""
}

func (x *User) GetOfficeAddr() string {
	if x != nil && x.OfficeAddr != nil {
		return *x.OfficeAddr
	}
	return ""
}

func (x *User) GetRemark() string {
	if x != nil && x.Remark != nil {
		return *x.Remark
	}
	return ""
}

func (x *User) GetStatus() string {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return ""
}

func (x *User) GetEp() []*Ep {
	if x != nil {
		return x.Ep
	}
	return nil
}

func (x *User) GetGlobalEP() *Ep {
	if x != nil {
		return x.GlobalEP
	}
	return nil
}

func (x *User) GetOrg() *Org {
	if x != nil {
		return x.Org
	}
	return nil
}

func (x *User) GetToken() string {
	if x != nil && x.Token != nil {
		return *x.Token
	}
	return ""
}

type LoadBalancingMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// srv -> lbsrv, LB_SRV_ONLINE
	Name *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Pwd  *string `protobuf:"bytes,2,opt,name=pwd" json:"pwd,omitempty"`
	// srv -> lbsrv, LB_PAYLOAD_FULL
	SenderEP *ServEP `protobuf:"bytes,3,opt,name=senderEP" json:"senderEP,omitempty"`
	// lbsrv->srv, LB_SRV_ONLINE, LB_QRY_IDLE_SRV
	SrvEpList []*ServEP `protobuf:"bytes,4,rep,name=srvEpList" json:"srvEpList,omitempty"`
	// srv -> lbsrv, LB_USER_LOGIN, LB_USER_LOGOUT
	// lbsrv -> srv, LB_QRY_ONLINE_USERS
	UserList []*UserEP `protobuf:"bytes,5,rep,name=userList" json:"userList,omitempty"`
	// srv <-> lbsrv, LB_PUSH_MSG
	Msg       *CmnMsg      `protobuf:"bytes,6,opt,name=msg" json:"msg,omitempty"`
	Type      *MessageType `protobuf:"varint,7,opt,name=type,enum=qproto.MessageType" json:"type,omitempty"`
	ActionRsl *string      `protobuf:"bytes,8,opt,name=actionRsl" json:"actionRsl,omitempty"`
}

func (x *LoadBalancingMsg) Reset() {
	*x = LoadBalancingMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_comm_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoadBalancingMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoadBalancingMsg) ProtoMessage() {}

func (x *LoadBalancingMsg) ProtoReflect() protoreflect.Message {
	mi := &file_comm_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoadBalancingMsg.ProtoReflect.Descriptor instead.
func (*LoadBalancingMsg) Descriptor() ([]byte, []int) {
	return file_comm_proto_rawDescGZIP(), []int{17}
}

func (x *LoadBalancingMsg) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *LoadBalancingMsg) GetPwd() string {
	if x != nil && x.Pwd != nil {
		return *x.Pwd
	}
	return ""
}

func (x *LoadBalancingMsg) GetSenderEP() *ServEP {
	if x != nil {
		return x.SenderEP
	}
	return nil
}

func (x *LoadBalancingMsg) GetSrvEpList() []*ServEP {
	if x != nil {
		return x.SrvEpList
	}
	return nil
}

func (x *LoadBalancingMsg) GetUserList() []*UserEP {
	if x != nil {
		return x.UserList
	}
	return nil
}

func (x *LoadBalancingMsg) GetMsg() *CmnMsg {
	if x != nil {
		return x.Msg
	}
	return nil
}

func (x *LoadBalancingMsg) GetType() MessageType {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return MessageType_UNKNOWN
}

func (x *LoadBalancingMsg) GetActionRsl() string {
	if x != nil && x.ActionRsl != nil {
		return *x.ActionRsl
	}
	return ""
}

type Msg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//协议签名
	ProtoSign *uint32 `protobuf:"fixed32,1,req,name=protoSign" json:"protoSign,omitempty"`
	//协议帧长度
	MsgLength *uint32 `protobuf:"fixed32,2,req,name=msgLength" json:"msgLength,omitempty"`
	//消息类型
	Type *MessageType `protobuf:"varint,3,req,name=type,enum=qproto.MessageType" json:"type,omitempty"`
	//通信协议级反馈类型: 's': 服务端反馈, 'c': 客户端反馈
	FeedbackType *string `protobuf:"bytes,4,opt,name=feedbackType" json:"feedbackType,omitempty"`
	//消息发出的时间, 以纳秒为单位
	SenderTimer *uint64 `protobuf:"varint,5,opt,name=senderTimer" json:"senderTimer,omitempty"`
	//数据处理结果, 即request/response中的response
	Status *Status `protobuf:"bytes,6,opt,name=status" json:"status,omitempty"`
	//发送者
	Sender *User `protobuf:"bytes,7,opt,name=sender" json:"sender,omitempty"`
	//后端时钟，用于各端同步需求
	SrvTimer *uint64 `protobuf:"varint,10,opt,name=srvTimer" json:"srvTimer,omitempty"`
	//根据 messageType对应的协议负载
	Data []byte `protobuf:"bytes,11,opt,name=data" json:"data,omitempty"`
	//service access point
	Ep []*Ep `protobuf:"bytes,12,rep,name=ep" json:"ep,omitempty"`
	//接收消息的用户列表
	UserList []*User `protobuf:"bytes,13,rep,name=userList" json:"userList,omitempty"`
	//发送者或要求接收方执行的动作
	Action []*Action `protobuf:"bytes,15,rep,name=action" json:"action,omitempty"`
}

func (x *Msg) Reset() {
	*x = Msg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_comm_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Msg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Msg) ProtoMessage() {}

func (x *Msg) ProtoReflect() protoreflect.Message {
	mi := &file_comm_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Msg.ProtoReflect.Descriptor instead.
func (*Msg) Descriptor() ([]byte, []int) {
	return file_comm_proto_rawDescGZIP(), []int{18}
}

func (x *Msg) GetProtoSign() uint32 {
	if x != nil && x.ProtoSign != nil {
		return *x.ProtoSign
	}
	return 0
}

func (x *Msg) GetMsgLength() uint32 {
	if x != nil && x.MsgLength != nil {
		return *x.MsgLength
	}
	return 0
}

func (x *Msg) GetType() MessageType {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return MessageType_UNKNOWN
}

func (x *Msg) GetFeedbackType() string {
	if x != nil && x.FeedbackType != nil {
		return *x.FeedbackType
	}
	return ""
}

func (x *Msg) GetSenderTimer() uint64 {
	if x != nil && x.SenderTimer != nil {
		return *x.SenderTimer
	}
	return 0
}

func (x *Msg) GetStatus() *Status {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *Msg) GetSender() *User {
	if x != nil {
		return x.Sender
	}
	return nil
}

func (x *Msg) GetSrvTimer() uint64 {
	if x != nil && x.SrvTimer != nil {
		return *x.SrvTimer
	}
	return 0
}

func (x *Msg) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *Msg) GetEp() []*Ep {
	if x != nil {
		return x.Ep
	}
	return nil
}

func (x *Msg) GetUserList() []*User {
	if x != nil {
		return x.UserList
	}
	return nil
}

func (x *Msg) GetAction() []*Action {
	if x != nil {
		return x.Action
	}
	return nil
}

var File_comm_proto protoreflect.FileDescriptor

var file_comm_proto_rawDesc = []byte{
	0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06, 0x71, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0x39, 0x0a, 0x0a, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61,
	0x74, 0x65, 0x12, 0x0c, 0x0a, 0x01, 0x78, 0x18, 0x01, 0x20, 0x02, 0x28, 0x12, 0x52, 0x01, 0x78,
	0x12, 0x0c, 0x0a, 0x01, 0x79, 0x18, 0x02, 0x20, 0x02, 0x28, 0x12, 0x52, 0x01, 0x79, 0x12, 0x0f,
	0x0a, 0x01, 0x7a, 0x18, 0x03, 0x20, 0x01, 0x28, 0x12, 0x3a, 0x01, 0x30, 0x52, 0x01, 0x7a, 0x22,
	0x2c, 0x0a, 0x04, 0x61, 0x74, 0x74, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x02, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x02, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x4e, 0x0a,
	0x06, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x02, 0x28, 0x11, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x20, 0x0a, 0x04, 0x61,
	0x74, 0x74, 0x72, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x71, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x61, 0x74, 0x74, 0x72, 0x52, 0x04, 0x61, 0x74, 0x74, 0x72, 0x22, 0xca, 0x01,
	0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x26, 0x0a, 0x06, 0x6f, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x71, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x06, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x12, 0x28, 0x0a, 0x05, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x02, 0x28, 0x0b, 0x32,
	0x12, 0x2e, 0x71, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e,
	0x61, 0x74, 0x65, 0x52, 0x05, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x03, 0x20, 0x02, 0x28, 0x11, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x74, 0x6f, 0x77, 0x61, 0x72, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x11, 0x52, 0x06,
	0x74, 0x6f, 0x77, 0x61, 0x72, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x68, 0x65, 0x61, 0x72, 0x74, 0x62,
	0x65, 0x61, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x68, 0x65, 0x61, 0x72, 0x74,
	0x62, 0x65, 0x61, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c,
	0x54, 0x69, 0x6d, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0d, 0x6f, 0x72, 0x69,
	0x67, 0x69, 0x6e, 0x61, 0x6c, 0x54, 0x69, 0x6d, 0x65, 0x72, 0x22, 0x29, 0x0a, 0x06, 0x73, 0x61,
	0x70, 0x5f, 0x76, 0x34, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x6f, 0x63, 0x6b, 0x61, 0x64, 0x64, 0x72,
	0x5f, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0c, 0x52, 0x0a, 0x73, 0x6f, 0x63, 0x6b, 0x61,
	0x64, 0x64, 0x72, 0x49, 0x6e, 0x22, 0x2b, 0x0a, 0x06, 0x73, 0x61, 0x70, 0x5f, 0x76, 0x36, 0x12,
	0x21, 0x0a, 0x0c, 0x73, 0x6f, 0x63, 0x6b, 0x61, 0x64, 0x64, 0x72, 0x5f, 0x69, 0x6e, 0x36, 0x18,
	0x01, 0x20, 0x02, 0x28, 0x0c, 0x52, 0x0b, 0x73, 0x6f, 0x63, 0x6b, 0x61, 0x64, 0x64, 0x72, 0x49,
	0x6e, 0x36, 0x22, 0xe5, 0x01, 0x0a, 0x03, 0x73, 0x61, 0x70, 0x12, 0x37, 0x0a, 0x0f, 0x67, 0x6c,
	0x6f, 0x62, 0x61, 0x6c, 0x41, 0x64, 0x64, 0x72, 0x5f, 0x69, 0x70, 0x76, 0x34, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x71, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x73, 0x61, 0x70,
	0x5f, 0x76, 0x34, 0x52, 0x0e, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x41, 0x64, 0x64, 0x72, 0x49,
	0x70, 0x76, 0x34, 0x12, 0x35, 0x0a, 0x0e, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x41, 0x64, 0x64, 0x72,
	0x5f, 0x69, 0x70, 0x76, 0x34, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x71, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x73, 0x61, 0x70, 0x5f, 0x76, 0x34, 0x52, 0x0d, 0x6c, 0x6f, 0x63,
	0x61, 0x6c, 0x41, 0x64, 0x64, 0x72, 0x49, 0x70, 0x76, 0x34, 0x12, 0x37, 0x0a, 0x0f, 0x67, 0x6c,
	0x6f, 0x62, 0x61, 0x6c, 0x41, 0x64, 0x64, 0x72, 0x5f, 0x69, 0x70, 0x76, 0x36, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x71, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x73, 0x61, 0x70,
	0x5f, 0x76, 0x36, 0x52, 0x0e, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x41, 0x64, 0x64, 0x72, 0x49,
	0x70, 0x76, 0x36, 0x12, 0x35, 0x0a, 0x0e, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x41, 0x64, 0x64, 0x72,
	0x5f, 0x69, 0x70, 0x76, 0x36, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x71, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x73, 0x61, 0x70, 0x5f, 0x76, 0x36, 0x52, 0x0d, 0x6c, 0x6f, 0x63,
	0x61, 0x6c, 0x41, 0x64, 0x64, 0x72, 0x49, 0x70, 0x76, 0x36, 0x22, 0xb1, 0x01, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x27, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20,
	0x02, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x71, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x10,
	0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x04, 0x20, 0x02, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67,
	0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x11, 0x52, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x74, 0x69, 0x63, 0x6b, 0x43, 0x6e, 0x74, 0x49,
	0x6e, 0x42, 0x79, 0x74, 0x65, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0e, 0x74, 0x69,
	0x63, 0x6b, 0x43, 0x6e, 0x74, 0x49, 0x6e, 0x42, 0x79, 0x74, 0x65, 0x73, 0x12, 0x12, 0x0a, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x12, 0x1c, 0x0a, 0x09, 0x64, 0x61, 0x74, 0x61, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0d, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x09, 0x64, 0x61, 0x74, 0x61, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x2c,
	0x0a, 0x02, 0x65, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x61, 0x64, 0x64, 0x72, 0x18, 0x01, 0x20, 0x02,
	0x28, 0x09, 0x52, 0x04, 0x61, 0x64, 0x64, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x72, 0x74,
	0x18, 0x02, 0x20, 0x02, 0x28, 0x0d, 0x52, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x22, 0x24, 0x0a, 0x06,
	0x65, 0x70, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x02, 0x65, 0x70, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x71, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x65, 0x70, 0x52, 0x02,
	0x65, 0x70, 0x22, 0x70, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x45, 0x50, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x10, 0x0a, 0x03, 0x70, 0x77, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x70,
	0x77, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1a, 0x0a, 0x02, 0x65, 0x70, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x71, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x65, 0x70,
	0x52, 0x02, 0x65, 0x70, 0x22, 0xa4, 0x01, 0x0a, 0x06, 0x73, 0x65, 0x72, 0x76, 0x45, 0x50, 0x12,
	0x1e, 0x0a, 0x0a, 0x6d, 0x61, 0x78, 0x50, 0x61, 0x79, 0x4c, 0x6f, 0x61, 0x64, 0x18, 0x01, 0x20,
	0x02, 0x28, 0x0d, 0x52, 0x0a, 0x6d, 0x61, 0x78, 0x50, 0x61, 0x79, 0x4c, 0x6f, 0x61, 0x64, 0x12,
	0x26, 0x0a, 0x0e, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x50, 0x61, 0x79, 0x4c, 0x6f, 0x61,
	0x64, 0x18, 0x02, 0x20, 0x02, 0x28, 0x0d, 0x52, 0x0e, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74,
	0x50, 0x61, 0x79, 0x4c, 0x6f, 0x61, 0x64, 0x12, 0x1a, 0x0a, 0x02, 0x65, 0x70, 0x18, 0x03, 0x20,
	0x02, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x71, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x65, 0x70, 0x52,
	0x02, 0x65, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x72, 0x76, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04,
	0x20, 0x02, 0x28, 0x09, 0x52, 0x07, 0x73, 0x72, 0x76, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a,
	0x09, 0x62, 0x49, 0x73, 0x4f, 0x6e, 0x4c, 0x69, 0x6e, 0x65, 0x18, 0x06, 0x20, 0x02, 0x28, 0x08,
	0x52, 0x09, 0x62, 0x49, 0x73, 0x4f, 0x6e, 0x4c, 0x69, 0x6e, 0x65, 0x22, 0x4e, 0x0a, 0x06, 0x74,
	0x61, 0x72, 0x67, 0x65, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x67, 0x72, 0x70, 0x49, 0x44, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0d, 0x52, 0x05, 0x67, 0x72, 0x70, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x72,
	0x6f, 0x6c, 0x65, 0x49, 0x44, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x06, 0x72, 0x6f, 0x6c,
	0x65, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x0d, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x22, 0xca, 0x01, 0x0a, 0x06,
	0x63, 0x6d, 0x6e, 0x4d, 0x73, 0x67, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x1a, 0x0a, 0x08,
	0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x61, 0x74, 0x65,
	0x67, 0x6f, 0x72, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x61, 0x74, 0x65,
	0x67, 0x6f, 0x72, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x26,
	0x0a, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e,
	0x2e, 0x71, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x52, 0x06,
	0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73,
	0x68, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x70, 0x75, 0x62,
	0x6c, 0x69, 0x73, 0x68, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x2b, 0x0a, 0x03, 0x6f, 0x72, 0x67, 0x12,
	0x10, 0x0a, 0x03, 0x67, 0x72, 0x70, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x03, 0x67, 0x72,
	0x70, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0d, 0x52,
	0x04, 0x72, 0x6f, 0x6c, 0x65, 0x22, 0x2b, 0x0a, 0x07, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x73,
	0x12, 0x20, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c,
	0x2e, 0x71, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x52, 0x04, 0x75, 0x73,
	0x65, 0x72, 0x22, 0xbf, 0x04, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x10, 0x0a, 0x03, 0x70, 0x77, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x70, 0x77,
	0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x14, 0x0a, 0x05, 0x64, 0x65, 0x76, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x64, 0x65, 0x76, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x6f, 0x6c,
	0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x12, 0x22, 0x0a,
	0x0c, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x22, 0x0a, 0x0c, 0x6c, 0x61, 0x73, 0x74, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x53, 0x41,
	0x50, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6c, 0x61, 0x73, 0x74, 0x4c, 0x6f, 0x67,
	0x69, 0x6e, 0x53, 0x41, 0x50, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x67,
	0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x67, 0x65, 0x6e,
	0x64, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x6d, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x0e, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x69, 0x6d, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74,
	0x65, 0x6c, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x6c, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x68, 0x6f, 0x6d, 0x65, 0x41, 0x64, 0x64, 0x72, 0x18, 0x10, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x68, 0x6f, 0x6d, 0x65, 0x41, 0x64, 0x64, 0x72, 0x12, 0x1e, 0x0a, 0x0a, 0x6f,
	0x66, 0x66, 0x69, 0x63, 0x65, 0x41, 0x64, 0x64, 0x72, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x6f, 0x66, 0x66, 0x69, 0x63, 0x65, 0x41, 0x64, 0x64, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x72,
	0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x1f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x6d,
	0x61, 0x72, 0x6b, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x20, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1a, 0x0a, 0x02, 0x65,
	0x70, 0x18, 0x21, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x71, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x65, 0x70, 0x52, 0x02, 0x65, 0x70, 0x12, 0x26, 0x0a, 0x08, 0x67, 0x6c, 0x6f, 0x62, 0x61,
	0x6c, 0x45, 0x50, 0x18, 0x22, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x71, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x65, 0x70, 0x52, 0x08, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x45, 0x50, 0x12,
	0x1d, 0x0a, 0x03, 0x6f, 0x72, 0x67, 0x18, 0x28, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x71,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x6f, 0x72, 0x67, 0x52, 0x03, 0x6f, 0x72, 0x67, 0x12, 0x14,
	0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x2a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x22, 0xa7, 0x02, 0x0a, 0x10, 0x4c, 0x6f, 0x61, 0x64, 0x42, 0x61, 0x6c,
	0x61, 0x6e, 0x63, 0x69, 0x6e, 0x67, 0x4d, 0x73, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a,
	0x03, 0x70, 0x77, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x70, 0x77, 0x64, 0x12,
	0x2a, 0x0a, 0x08, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x45, 0x50, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0e, 0x2e, 0x71, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x45,
	0x50, 0x52, 0x08, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x45, 0x50, 0x12, 0x2c, 0x0a, 0x09, 0x73,
	0x72, 0x76, 0x45, 0x70, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e,
	0x2e, 0x71, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x45, 0x50, 0x52, 0x09,
	0x73, 0x72, 0x76, 0x45, 0x70, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x2a, 0x0a, 0x08, 0x75, 0x73, 0x65,
	0x72, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x71, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x45, 0x50, 0x52, 0x08, 0x75, 0x73, 0x65,
	0x72, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x71, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x6d, 0x6e, 0x4d,
	0x73, 0x67, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x27, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x71, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x12, 0x1c, 0x0a, 0x09, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x73, 0x6c, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x73, 0x6c, 0x22, 0x9c,
	0x03, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x53,
	0x69, 0x67, 0x6e, 0x18, 0x01, 0x20, 0x02, 0x28, 0x07, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x53, 0x69, 0x67, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x6d, 0x73, 0x67, 0x4c, 0x65, 0x6e, 0x67, 0x74,
	0x68, 0x18, 0x02, 0x20, 0x02, 0x28, 0x07, 0x52, 0x09, 0x6d, 0x73, 0x67, 0x4c, 0x65, 0x6e, 0x67,
	0x74, 0x68, 0x12, 0x27, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x02, 0x28, 0x0e,
	0x32, 0x13, 0x2e, 0x71, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x66,
	0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x66, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x20, 0x0a, 0x0b, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x54, 0x69, 0x6d, 0x65, 0x72, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x54, 0x69, 0x6d, 0x65,
	0x72, 0x12, 0x26, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0e, 0x2e, 0x71, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x24, 0x0a, 0x06, 0x73, 0x65, 0x6e,
	0x64, 0x65, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x71, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x52, 0x06, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12,
	0x1a, 0x0a, 0x08, 0x73, 0x72, 0x76, 0x54, 0x69, 0x6d, 0x65, 0x72, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x08, 0x73, 0x72, 0x76, 0x54, 0x69, 0x6d, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12,
	0x1a, 0x0a, 0x02, 0x65, 0x70, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x71, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x65, 0x70, 0x52, 0x02, 0x65, 0x70, 0x12, 0x28, 0x0a, 0x08, 0x75,
	0x73, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x0d, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e,
	0x71, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x52, 0x08, 0x75, 0x73, 0x65,
	0x72, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x26, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x0f, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x71, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2a, 0xd0, 0x05,
	0x0a, 0x0b, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0b, 0x0a,
	0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x41, 0x43,
	0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x10, 0x02, 0x12, 0x0e, 0x0a,
	0x0a, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x4c, 0x4f, 0x47, 0x49, 0x4e, 0x10, 0x04, 0x12, 0x0f, 0x0a,
	0x0b, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x4c, 0x4f, 0x47, 0x4f, 0x55, 0x54, 0x10, 0x06, 0x12, 0x11,
	0x0a, 0x0d, 0x52, 0x45, 0x47, 0x49, 0x53, 0x54, 0x45, 0x52, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x10,
	0x08, 0x12, 0x0f, 0x0a, 0x0b, 0x52, 0x45, 0x56, 0x4f, 0x4b, 0x45, 0x5f, 0x55, 0x53, 0x45, 0x52,
	0x10, 0x0a, 0x12, 0x12, 0x0a, 0x0e, 0x51, 0x55, 0x45, 0x52, 0x59, 0x5f, 0x55, 0x53, 0x45, 0x52,
	0x4c, 0x49, 0x53, 0x54, 0x10, 0x0c, 0x12, 0x0e, 0x0a, 0x0a, 0x51, 0x55, 0x45, 0x52, 0x59, 0x5f,
	0x55, 0x53, 0x45, 0x52, 0x10, 0x0e, 0x12, 0x14, 0x0a, 0x10, 0x51, 0x55, 0x45, 0x52, 0x59, 0x5f,
	0x55, 0x53, 0x45, 0x52, 0x5f, 0x41, 0x4c, 0x49, 0x56, 0x45, 0x10, 0x10, 0x12, 0x08, 0x0a, 0x04,
	0x53, 0x59, 0x4e, 0x43, 0x10, 0x12, 0x12, 0x0d, 0x0a, 0x09, 0x48, 0x45, 0x41, 0x52, 0x54, 0x42,
	0x45, 0x41, 0x54, 0x10, 0x14, 0x12, 0x0c, 0x0a, 0x08, 0x43, 0x48, 0x41, 0x54, 0x5f, 0x4d, 0x53,
	0x47, 0x10, 0x16, 0x12, 0x0c, 0x0a, 0x08, 0x46, 0x49, 0x4c, 0x45, 0x5f, 0x4d, 0x53, 0x47, 0x10,
	0x18, 0x12, 0x0d, 0x0a, 0x09, 0x41, 0x55, 0x44, 0x49, 0x4f, 0x5f, 0x4d, 0x53, 0x47, 0x10, 0x1a,
	0x12, 0x0d, 0x0a, 0x09, 0x56, 0x49, 0x44, 0x45, 0x4f, 0x5f, 0x4d, 0x53, 0x47, 0x10, 0x1c, 0x12,
	0x0d, 0x0a, 0x09, 0x50, 0x55, 0x4e, 0x43, 0x48, 0x5f, 0x52, 0x45, 0x51, 0x10, 0x1e, 0x12, 0x14,
	0x0a, 0x10, 0x50, 0x55, 0x4e, 0x43, 0x48, 0x5f, 0x52, 0x45, 0x51, 0x5f, 0x42, 0x52, 0x4f, 0x4b,
	0x45, 0x52, 0x10, 0x22, 0x12, 0x12, 0x0a, 0x0e, 0x50, 0x55, 0x4e, 0x43, 0x48, 0x5f, 0x52, 0x45,
	0x51, 0x5f, 0x50, 0x45, 0x45, 0x52, 0x10, 0x24, 0x12, 0x0e, 0x0a, 0x0a, 0x50, 0x55, 0x4e, 0x43,
	0x48, 0x5f, 0x52, 0x45, 0x53, 0x50, 0x10, 0x26, 0x12, 0x0b, 0x0a, 0x07, 0x50, 0x49, 0x45, 0x52,
	0x43, 0x45, 0x44, 0x10, 0x28, 0x12, 0x0e, 0x0a, 0x0a, 0x50, 0x55, 0x4e, 0x43, 0x48, 0x5f, 0x50,
	0x49, 0x4e, 0x47, 0x10, 0x2a, 0x12, 0x0e, 0x0a, 0x0a, 0x50, 0x55, 0x4e, 0x43, 0x48, 0x5f, 0x50,
	0x4f, 0x4e, 0x47, 0x10, 0x2c, 0x12, 0x0e, 0x0a, 0x0a, 0x50, 0x55, 0x4e, 0x43, 0x48, 0x5f, 0x49,
	0x4e, 0x49, 0x54, 0x10, 0x32, 0x12, 0x0c, 0x0a, 0x08, 0x50, 0x55, 0x4e, 0x43, 0x48, 0x49, 0x4e,
	0x47, 0x10, 0x34, 0x12, 0x10, 0x0a, 0x0c, 0x50, 0x55, 0x4e, 0x43, 0x48, 0x5f, 0x46, 0x41, 0x49,
	0x4c, 0x45, 0x44, 0x10, 0x36, 0x12, 0x11, 0x0a, 0x0d, 0x50, 0x55, 0x4e, 0x43, 0x48, 0x5f, 0x53,
	0x55, 0x43, 0x43, 0x45, 0x53, 0x53, 0x10, 0x38, 0x12, 0x12, 0x0a, 0x0e, 0x51, 0x55, 0x45, 0x52,
	0x59, 0x5f, 0x52, 0x45, 0x53, 0x4f, 0x55, 0x52, 0x43, 0x45, 0x10, 0x3c, 0x12, 0x11, 0x0a, 0x0d,
	0x4c, 0x4f, 0x41, 0x44, 0x5f, 0x52, 0x45, 0x53, 0x4f, 0x55, 0x52, 0x43, 0x45, 0x10, 0x3e, 0x12,
	0x0b, 0x0a, 0x07, 0x45, 0x58, 0x45, 0x43, 0x55, 0x54, 0x45, 0x10, 0x40, 0x12, 0x0b, 0x0a, 0x07,
	0x53, 0x52, 0x56, 0x5f, 0x4d, 0x47, 0x52, 0x10, 0x42, 0x12, 0x10, 0x0a, 0x0c, 0x53, 0x52, 0x56,
	0x5f, 0x53, 0x48, 0x55, 0x54, 0x44, 0x4f, 0x57, 0x4e, 0x10, 0x44, 0x12, 0x10, 0x0a, 0x0c, 0x53,
	0x52, 0x56, 0x5f, 0x53, 0x54, 0x41, 0x52, 0x54, 0x49, 0x4e, 0x47, 0x10, 0x46, 0x12, 0x0f, 0x0a,
	0x0b, 0x53, 0x52, 0x56, 0x5f, 0x4d, 0x45, 0x53, 0x53, 0x41, 0x47, 0x45, 0x10, 0x48, 0x12, 0x11,
	0x0a, 0x0d, 0x4c, 0x42, 0x5f, 0x53, 0x52, 0x56, 0x5f, 0x4f, 0x4e, 0x4c, 0x49, 0x4e, 0x45, 0x10,
	0x50, 0x12, 0x12, 0x0a, 0x0e, 0x4c, 0x42, 0x5f, 0x53, 0x52, 0x56, 0x5f, 0x4f, 0x46, 0x46, 0x4c,
	0x49, 0x4e, 0x45, 0x10, 0x52, 0x12, 0x13, 0x0a, 0x0f, 0x4c, 0x42, 0x5f, 0x51, 0x52, 0x59, 0x5f,
	0x49, 0x44, 0x4c, 0x45, 0x5f, 0x53, 0x52, 0x56, 0x10, 0x54, 0x12, 0x11, 0x0a, 0x0d, 0x4c, 0x42,
	0x5f, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x4c, 0x4f, 0x47, 0x49, 0x4e, 0x10, 0x56, 0x12, 0x12, 0x0a,
	0x0e, 0x4c, 0x42, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x4c, 0x4f, 0x47, 0x4f, 0x55, 0x54, 0x10,
	0x58, 0x12, 0x17, 0x0a, 0x13, 0x4c, 0x42, 0x5f, 0x51, 0x52, 0x59, 0x5f, 0x4f, 0x4e, 0x4c, 0x49,
	0x4e, 0x45, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x53, 0x10, 0x5a, 0x12, 0x0f, 0x0a, 0x0b, 0x4c, 0x42,
	0x5f, 0x50, 0x55, 0x53, 0x48, 0x5f, 0x4d, 0x53, 0x47, 0x10, 0x5c, 0x12, 0x13, 0x0a, 0x0f, 0x4c,
	0x42, 0x5f, 0x50, 0x41, 0x59, 0x4c, 0x4f, 0x41, 0x44, 0x5f, 0x46, 0x55, 0x4c, 0x4c, 0x10, 0x5e,
	0x42, 0x0a, 0x5a, 0x08, 0x2e, 0x3b, 0x71, 0x70, 0x72, 0x6f, 0x74, 0x6f,
}

var (
	file_comm_proto_rawDescOnce sync.Once
	file_comm_proto_rawDescData = file_comm_proto_rawDesc
)

func file_comm_proto_rawDescGZIP() []byte {
	file_comm_proto_rawDescOnce.Do(func() {
		file_comm_proto_rawDescData = protoimpl.X.CompressGZIP(file_comm_proto_rawDescData)
	})
	return file_comm_proto_rawDescData
}

var file_comm_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_comm_proto_msgTypes = make([]protoimpl.MessageInfo, 19)
var file_comm_proto_goTypes = []interface{}{
	(MessageType)(0),         // 0: qproto.messageType
	(*Coordinate)(nil),       // 1: qproto.coordinate
	(*Attr)(nil),             // 2: qproto.attr
	(*Object)(nil),           // 3: qproto.object
	(*Action)(nil),           // 4: qproto.action
	(*SapV4)(nil),            // 5: qproto.sap_v4
	(*SapV6)(nil),            // 6: qproto.sap_v6
	(*Sap)(nil),              // 7: qproto.sap
	(*Status)(nil),           // 8: qproto.status
	(*Ep)(nil),               // 9: qproto.ep
	(*EpList)(nil),           // 10: qproto.epList
	(*UserEP)(nil),           // 11: qproto.userEP
	(*ServEP)(nil),           // 12: qproto.servEP
	(*Target)(nil),           // 13: qproto.target
	(*CmnMsg)(nil),           // 14: qproto.cmnMsg
	(*Org)(nil),              // 15: qproto.org
	(*Targets)(nil),          // 16: qproto.targets
	(*User)(nil),             // 17: qproto.user
	(*LoadBalancingMsg)(nil), // 18: qproto.LoadBalancingMsg
	(*Msg)(nil),              // 19: qproto.msg
}
var file_comm_proto_depIdxs = []int32{
	2,  // 0: qproto.object.attr:type_name -> qproto.attr
	3,  // 1: qproto.action.object:type_name -> qproto.object
	1,  // 2: qproto.action.coord:type_name -> qproto.coordinate
	5,  // 3: qproto.sap.globalAddr_ipv4:type_name -> qproto.sap_v4
	5,  // 4: qproto.sap.localAddr_ipv4:type_name -> qproto.sap_v4
	6,  // 5: qproto.sap.globalAddr_ipv6:type_name -> qproto.sap_v6
	6,  // 6: qproto.sap.localAddr_ipv6:type_name -> qproto.sap_v6
	0,  // 7: qproto.status.type:type_name -> qproto.messageType
	9,  // 8: qproto.epList.ep:type_name -> qproto.ep
	9,  // 9: qproto.userEP.ep:type_name -> qproto.ep
	9,  // 10: qproto.servEP.ep:type_name -> qproto.ep
	13, // 11: qproto.cmnMsg.target:type_name -> qproto.target
	17, // 12: qproto.targets.user:type_name -> qproto.user
	9,  // 13: qproto.user.ep:type_name -> qproto.ep
	9,  // 14: qproto.user.globalEP:type_name -> qproto.ep
	15, // 15: qproto.user.org:type_name -> qproto.org
	12, // 16: qproto.LoadBalancingMsg.senderEP:type_name -> qproto.servEP
	12, // 17: qproto.LoadBalancingMsg.srvEpList:type_name -> qproto.servEP
	11, // 18: qproto.LoadBalancingMsg.userList:type_name -> qproto.userEP
	14, // 19: qproto.LoadBalancingMsg.msg:type_name -> qproto.cmnMsg
	0,  // 20: qproto.LoadBalancingMsg.type:type_name -> qproto.messageType
	0,  // 21: qproto.msg.type:type_name -> qproto.messageType
	8,  // 22: qproto.msg.status:type_name -> qproto.status
	17, // 23: qproto.msg.sender:type_name -> qproto.user
	9,  // 24: qproto.msg.ep:type_name -> qproto.ep
	17, // 25: qproto.msg.userList:type_name -> qproto.user
	4,  // 26: qproto.msg.action:type_name -> qproto.action
	27, // [27:27] is the sub-list for method output_type
	27, // [27:27] is the sub-list for method input_type
	27, // [27:27] is the sub-list for extension type_name
	27, // [27:27] is the sub-list for extension extendee
	0,  // [0:27] is the sub-list for field type_name
}

func init() { file_comm_proto_init() }
func file_comm_proto_init() {
	if File_comm_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_comm_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Coordinate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_comm_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Attr); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_comm_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Object); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_comm_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Action); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_comm_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SapV4); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_comm_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SapV6); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_comm_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Sap); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_comm_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Status); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_comm_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Ep); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_comm_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EpList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_comm_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserEP); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_comm_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServEP); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_comm_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Target); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_comm_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CmnMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_comm_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Org); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_comm_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Targets); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_comm_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*User); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_comm_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoadBalancingMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_comm_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Msg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_comm_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   19,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_comm_proto_goTypes,
		DependencyIndexes: file_comm_proto_depIdxs,
		EnumInfos:         file_comm_proto_enumTypes,
		MessageInfos:      file_comm_proto_msgTypes,
	}.Build()
	File_comm_proto = out.File
	file_comm_proto_rawDesc = nil
	file_comm_proto_goTypes = nil
	file_comm_proto_depIdxs = nil
}
